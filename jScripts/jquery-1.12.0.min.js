let form;          // הטופס עצמו
let nameBox;       // שדה השם
let sendBtn;       // כפתור "אישור"
let resultBox;     // תיבת פלט
let sizeList;      // כל הרדיו של הגודל
let typeList;      // כל הרדיו של הסוג
let extraList;     // כל הצ'קבוקסים של התוספות
let pickedSize = "";    // מה המשתמש בחר בגודל
let pickedType = "";    // מה המשתמש בחר בסוג
let pickedExtras = [];  // אילו תוספות המשתמש סימן

function startForm() {
    // לוקחים הפניות לדברים העיקריים בטופס
    form = document.getElementById("ReservationCoffee");
    nameBox = document.getElementById("customer");
    sendBtn = form.getElementsByTagName("button")[0]; // איתור הכפתור במיקום ה0 בטופס (לוקחים את הכפתור הראשון כי בטופס יש רק אחד)
    resultBox = document.getElementById("result");

    // אוספים את הקבוצות לפי name
    sizeList  = document.getElementsByName("size");
    typeList  = document.getElementsByName("type");
    extraList = document.getElementsByName("extras");

    // בהתחלה: כפתור לא לחיץ וחצי שקוף
    sendBtn.disabled = true;
    sendBtn.style.opacity = 0.5;

    // הסתרה של כל תמונות הרדיו 
    hideAllRadioImages(1); //  ראשון div
    hideAllRadioImages(2); // div שני

    // בהתחלה: לעשות לתמונות של התוספות חצי שקיפות (כדי שיראו "כבוי")
    dimAllExtras();

    // נקה את הפידבק אם היה משהו
    resultBox.innerHTML = "";
}
// מחזיר את ה-div לפי המיקום שלו בטופס
function getSectionDiv(i) {
    return form.getElementsByTagName("div")[i];
}
// פונקציה שמסתירה את התמונות לפני הבחירה
function hideAllRadioImages(sectionIndex) {
    const box = getSectionDiv(sectionIndex);
    const imgs = box.getElementsByTagName("img");
    for (let i = 0; i < imgs.length; i++) {
        imgs[i].style.display = "none";
    }
}
// פונקציה שגורמת לתמונות להיות בחצי שקיפות
function dimAllExtras() {
    const box = getSectionDiv(3); // 3 = div של  תוספות
    const imgs = box.getElementsByTagName("img");
    for (let i = 0; i < imgs.length; i++) {
        imgs[i].style.opacity = 0.5;
        imgs[i].style.border = "1px solid #232327";
        imgs[i].style.borderRadius = "12px";
        imgs[i].style.boxShadow = "none";
    }
}
// פונקציה כללית שמציגה את התמונה המתאימה לפי הבחירה ברדיו (עובדת גם לגודל וגם לסוג)
function pickRadio(sectionIndex, list, setPicked) {
    const box = getSectionDiv(sectionIndex);       // שולף את ה-div לפי המיקום (1 לגודל, 2 לסוג)
    const imgs = box.getElementsByTagName("img");  // שולף את כל התמונות שנמצאות בתוך ה-div

    // קודם כל מסתירים את כל התמונות כדי להתחיל ממצב נקי
    for (let i = 0; i < imgs.length; i++) {
        imgs[i].style.display = "none";
    }

    let selectedIndex = -1;    // נשמור כאן את המיקום של ה-radio שנבחר (מתחיל ב- -1 כדי לדעת אם אין בחירה)
    let selectedValue = "";    // נשמור כאן את הערך של הבחירה שנבחרה

    // עוברים על כל האפשרויות ומחפשים מי מסומן
    for (let i = 0; i < list.length; i++) {
        // אם הרדיו מסומן וטרם שמרנו אינדקס נבחר, נעדכן את הנתונים
        if (list[i].checked == true && selectedIndex == -1) {
            selectedIndex = i;                 // שומרים את המיקום של הבחירה
            selectedValue = list[i].value;     // שומרים את הערך של הבחירה
        }
    }

    // אם נמצאה בחירה כלשהי, נעדכן את המשתנה ונציג את התמונה המתאימה
    if (selectedIndex !== -1) {
        setPicked(selectedValue);              // מעדכן את הערך שנבחר (למשתנה pickedSize או pickedType)
        if (imgs[selectedIndex]) {             // אם קיימת תמונה באותו מיקום, נציג אותה
            imgs[selectedIndex].style.display = "inline-block";
        }
    }

    updateButton();                            // לאחר כל שינוי נעדכן את מצב הכפתור
}

// פונקציה שמופעלת בעת בחירת גודל, שולחת את הנתונים לפונקציה הכללית
function pickSize() {
    pickRadio(1, sizeList, v => pickedSize = v);
}

// פונקציה שמופעלת בעת בחירת סוג- שולחת את הנתונים לפונקציה הכללית
function pickType() {
    pickRadio(2, typeList, v => pickedType = v);
}

function toggleExtras() {
    const box = getSectionDiv(3);                           // קטע div של התוספות = 3 
    const imgs = box.getElementsByTagName("img");
    pickedExtras = []; // פתיחת מערך ריק
    for (let i = 0; i < extraList.length; i++) {       // עוברים על כל הצ'קבוקסים
        const isOn = extraList[i].checked;                 // אם המשתמש בחר צ'קבוקס
        if (imgs[i]) {                                 // אם יש תמונה במקום הזה נעדכן לה מצב
            imgs[i].style.opacity = isOn ? 1 : 0.5; // הסימן ? הוא קיצור של if/else. אם התנאי נכון הוא מחזיר את הערך הראשון, אחרת את הערך השני.
            imgs[i].style.border = isOn ? "1px solid rgba(201,168,106,.55)" : "1px solid #232327";
            imgs[i].style.borderRadius = "12px";
            imgs[i].style.boxShadow = isOn ? "0 6px 16px rgba(201,168,106,.18)" : "none";
        }
        if (isOn == true) {
            pickedExtras[pickedExtras.length] = extraList[i].value;
        }
    }
}
function updateButton() {           // פונקציה שהופכת את הכפתור ללחיץ במידה וקיימים התנאים הבאים:
    let hasName = false;
    if (nameBox.value != "") {      // אם המשתמש כתב משהו בתיבת השם
        hasName = true;
    }
    let hasSize = false;
    for (let i = 0; i < sizeList.length; i++) { // עוברים על כל הרדיו של הגודל
        if (sizeList[i].checked == true) {
            hasSize = true;
        }
    }
    let hasType = false;
    for (let i = 0; i < typeList.length; i++) { // עוברים על כל הרדיו של הסוג
        if (typeList[i].checked == true) {
            hasType = true;
        }
    }
    if (hasName == true && hasSize == true && hasType== true) {  // אם יש שם, גודל וסוג רק לאחר מכן יהיה אפשר ללחוץ על הכפתור
        sendBtn.disabled = false;
        sendBtn.style.opacity = 1;
    } else {
        sendBtn.disabled = true;
        sendBtn.style.opacity=0.5;
    }

}
function handleSend() {           // רצה כשמגישים את הטופס
    let nameVal = nameBox.value;

    let sizeVal = "-";
    for (let i = 0; i < sizeList.length; i++) {
        if (sizeList[i].checked == true) {
            sizeVal = sizeList[i].value;
        }
    }

    let typeVal = "-";
    for (let i = 0; i < typeList.length; i++) {
        if (typeList[i].checked == true) {
            typeVal = typeList[i].value;
        }
    }

    // בונים טקסט לתוספות לפי pickedExtras (מעודכן בזמן אמת ב-toggleExtras)
    let extrasText = "ללא";                   // ברירת מחדל- אין תוספות
    if (pickedExtras.length > 0) {            // אם יש לפחות תוספת אחת
        extrasText = "";                      // מתחילים ממחרוזת ריקה ונוסיף פריט- פריט
        for (let j = 0; j < pickedExtras.length; j++) {
            extrasText = extrasText + pickedExtras[j]; // מוסיף את שם התוספת הנוכחית
            if (j < pickedExtras.length - 1) {         // אם זה לא הפריט האחרון
                extrasText = extrasText + ", ";        // מוסיף מפריד: פסיק + רווח
            }
        }
    }


    resultBox.innerHTML =
        "הזמנה נקלטה!<br>" +
        "שם: <strong>" + nameVal + "</strong><br>" +
        "גודל: <strong>" + sizeVal + "</strong><br>" +
        "סוג: <strong>" + typeVal + "</strong><br>" +
        "תוספות: <strong>" + extrasText +"</strong>";
    return false;
}
